{"version":3,"file":"text-case.js","sources":["../../../../src/utils/text-case.ts"],"sourcesContent":["const capitalize = (str: string) => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\n\nconst wordsRegex = /[A-Z0-9]*(?:[^\\-_|A-Z|\\s.])*/gm\n\nexport const getWords = (str: string) => {\n  return str.match(wordsRegex)?.map((word) => word.trim().split(/([0-9]+)|([a-zA-Z]+)/g)).flat().filter(Boolean) || []\n}\n\nexport const camelCaseToKebabCase = (str: string) => {\n  return getWords(str)\n    .map((word) => word.toLowerCase())\n    .join('-')\n}\n\nexport const kebabCaseToCamelCase = (str: string) => {\n  return getWords(str)\n    .map((word, index) => index === 0 ? word.toLowerCase() : capitalize(word))\n    .join('')\n}\n\nexport const startCase = (str: string) => {\n  return getWords(str)\n    .map(capitalize)\n    .join(' ')\n}\n"],"names":[],"mappings":"AAAA,MAAM,aAAa,CAAC,QAAgB,IAAI,OAAO,CAAC,EAAE,YAAgB,IAAA,IAAI,MAAM,CAAC,EAAE,YAAY;AAE3F,MAAM,aAAa;AAEN,MAAA,WAAW,CAAC,QAAgB;AAJzC;AAKE,WAAO,SAAI,MAAM,UAAU,MAApB,mBAAuB,IAAI,CAAC,SAAS,KAAK,OAAO,MAAM,uBAAuB,GAAG,OAAO,OAAO,aAAY;AACpH;AAEa,MAAA,uBAAuB,CAAC,QAAgB;AAC5C,SAAA,SAAS,GAAG,EAChB,IAAI,CAAC,SAAS,KAAK,YAAa,CAAA,EAChC,KAAK,GAAG;AACb;AAEa,MAAA,uBAAuB,CAAC,QAAgB;AACnD,SAAO,SAAS,GAAG,EAChB,IAAI,CAAC,MAAM,UAAU,UAAU,IAAI,KAAK,YAAgB,IAAA,WAAW,IAAI,CAAC,EACxE,KAAK,EAAE;AACZ;AAEa,MAAA,YAAY,CAAC,QAAgB;AACxC,SAAO,SAAS,GAAG,EAChB,IAAI,UAAU,EACd,KAAK,GAAG;AACb;"}