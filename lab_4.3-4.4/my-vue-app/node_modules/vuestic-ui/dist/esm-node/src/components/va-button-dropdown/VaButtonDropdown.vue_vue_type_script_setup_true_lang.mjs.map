{"version":3,"file":"VaButtonDropdown.vue_vue_type_script_setup_true_lang.mjs","sources":["../../../../../src/components/va-button-dropdown/VaButtonDropdown.vue"],"sourcesContent":["<template>\n  <va-dropdown\n    v-if=\"!$props.split\"\n    v-bind=\"vaDropdownProps\"\n    v-model=\"valueComputed\"\n    :disabled=\"$props.disabled || $props.disableDropdown\"\n    :class=\"['va-button-dropdown']\"\n  >\n    <template #anchor>\n      <va-button\n        :aria-label=\"tp($props.ariaLabel)\"\n        v-bind=\"{ ...computedButtonIcons, ...buttonPropsComputed }\"\n        v-on=\"listeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n    </template>\n\n    <slot name=\"content\">\n      <va-dropdown-content>\n        <slot />\n      </va-dropdown-content>\n    </slot>\n  </va-dropdown>\n\n  <va-button-group\n    v-else\n    v-bind=\"buttonPropsComputed\"\n    :class=\"['va-button-dropdown', 'va-button-dropdown--split']\"\n  >\n    <va-button\n      v-if=\"!$props.leftIcon\"\n      :disabled=\"$props.disabled || $props.disableButton\"\n      v-bind=\"computedMainButtonProps\"\n      v-on=\"mainButtonListeners\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </va-button>\n\n    <va-dropdown\n      v-bind=\"vaDropdownProps\"\n      v-model=\"valueComputed\"\n      :disabled=\"$props.disabled || $props.disableDropdown\"\n    >\n      <template #anchor>\n        <va-button\n          :aria-label=\"$props.ariaLabel || t('toggleDropdown')\"\n          :disabled=\"$props.disabled || $props.disableDropdown\"\n          :icon=\"computedIcon\"\n          :icon-color=\"$props.iconColor\"\n          v-on=\"listeners\"\n          @keydown.esc.prevent=\"hideDropdown\"\n        />\n      </template>\n      <va-dropdown-content>\n        <slot />\n      </va-dropdown-content>\n    </va-dropdown>\n\n    <va-button\n      v-if=\"$props.leftIcon\"\n      :disabled=\"$props.disabled || $props.disableButton\"\n      v-bind=\"computedMainButtonProps\"\n      v-on=\"mainButtonListeners\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </va-button>\n  </va-button-group>\n</template>\n\n<script lang=\"ts\">\nimport { PropType, computed, useSlots } from 'vue'\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nimport {\n  useBem,\n  useComponentPresetProp,\n  useStateful, useStatefulProps,\n  useEmitProxy,\n  usePlacementAliasesProps,\n  useTranslation, useTranslationProp,\n} from '../../composables'\n\nimport { VaButton } from '../va-button'\nimport { VaButtonGroup } from '../va-button-group'\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\nimport { omit } from '../../utils/omit'\n\nconst { createEmits, createVOnListeners: createListeners } = useEmitProxy(['click'])\nconst { createEmits: createMainButtonEmits, createVOnListeners: createMainButtonListeners } = useEmitProxy(\n  [{ listen: 'click', emit: 'main-button-click' }],\n)\n\nconst VaButtonProps = omit(extractComponentProps(VaButton), ['iconRight', 'block'])\nconst VaDropdownProps = extractComponentProps(VaDropdown)\n</script>\n\n<script lang=\"ts\" setup>\n\ndefineOptions({\n  name: 'VaButtonDropdown',\n})\n\nconst props = defineProps({\n  ...useComponentPresetProp,\n  ...VaButtonProps,\n  ...VaDropdownProps,\n  ...useStatefulProps,\n  ...usePlacementAliasesProps,\n  modelValue: { type: Boolean, default: false },\n  stateful: { type: Boolean, default: true },\n\n  icon: { type: String, default: 'va-arrow-down' },\n  openedIcon: { type: String, default: 'va-arrow-up' },\n  hideIcon: { type: Boolean, default: false },\n  leftIcon: { type: Boolean, default: false },\n  iconColor: { type: String, default: '' },\n\n  disabled: { type: Boolean, default: false },\n  disableButton: { type: Boolean, default: false },\n  disableDropdown: { type: Boolean, default: false },\n\n  offset: { type: [Number, Array] as PropType<number | [number, number]>, default: 2 },\n  keepAnchorWidth: { type: Boolean, default: false },\n  closeOnContentClick: { type: Boolean, default: true },\n\n  split: { type: Boolean },\n  splitTo: { type: String, default: '' },\n  splitHref: { type: String, default: '' },\n\n  loading: { type: Boolean, default: false },\n  label: { type: String },\n\n  ariaLabel: useTranslationProp('$t:toggleDropdown'),\n})\n\nconst emit = defineEmits(['update:modelValue', ...createEmits(), ...createMainButtonEmits()])\n\nconst { valueComputed } = useStateful(props, emit)\n\nconst computedIcon = computed(() => valueComputed.value ? props.openedIcon : props.icon)\n\nconst slots = useSlots()\n\nconst computedButtonIcons = computed(() => {\n  if (props.hideIcon) { return {} }\n\n  const propName = (props.label || slots.label) && !props.leftIcon ? 'icon-right' : 'icon'\n  return { [propName]: computedIcon.value }\n})\n\nconst buttonPropsFiltered = computed(() => {\n  const ignoredProps = ['to', 'href', 'loading', 'icon'] as const\n  const presetProps = [\n    'plain',\n    'textOpacity', 'backgroundOpacity',\n    'hoverOpacity', 'hoverBehavior', 'hoverOpacity',\n    'pressedOpacity', 'pressedBehavior', 'pressedOpacity',\n  ] as const\n\n  if (props.preset) {\n    return Object.keys(omit(VaButtonProps, [...ignoredProps, ...presetProps]))\n  }\n\n  return Object.keys(omit(VaButtonProps, ignoredProps))\n})\nconst buttonPropsComputed = computed(\n  () => Object.entries(props)\n    .filter(([key, _]) => buttonPropsFiltered.value.includes(key))\n    .reduce((acc, [key, value]) => {\n      Object.assign(acc, { [key]: value })\n      return acc\n    }, {}),\n)\n\nconst computedMainButtonProps = computed(() => ({\n  to: props.splitTo,\n  href: props.splitHref,\n  loading: props.loading,\n}))\n\nconst hideDropdown = () => { valueComputed.value = false }\n\nconst vaDropdownProps = filterComponentProps(VaDropdownProps)\nconst listeners = createListeners(emit)\nconst mainButtonListeners = createMainButtonListeners(emit)\n\nconst { t, tp } = useTranslation()\n\ndefineExpose({\n  hideDropdown,\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n@import '../../styles/resources';\n\n.va-button-dropdown {\n  .va-button {\n    margin: var(--va-button-dropdown-button-margin);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;AA8FA,MAAM,EAAE,aAAa,oBAAoB,gBAAA,IAAoB,aAAa,CAAC,OAAO,CAAC;AACnF,MAAM,EAAE,aAAa,uBAAuB,oBAAoB,0BAA8B,IAAA;AAAA,EAC5F,CAAC,EAAE,QAAQ,SAAS,MAAM,qBAAqB;AACjD;AAEA,MAAM,gBAAgB,KAAK,sBAAsB,QAAQ,GAAG,CAAC,aAAa,OAAO,CAAC;AAClF,MAAM,kBAAkB,sBAAsB,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASxD,UAAM,QAAQ;AAiCd,UAAM,OAAO;AAEb,UAAM,EAAE,cAAkB,IAAA,YAAY,OAAO,IAAI;AAE3C,UAAA,eAAe,SAAS,MAAM,cAAc,QAAQ,MAAM,aAAa,MAAM,IAAI;AAEvF,UAAM,QAAQ;AAER,UAAA,sBAAsB,SAAS,MAAM;AACzC,UAAI,MAAM,UAAU;AAAE,eAAO;MAAG;AAE1B,YAAA,YAAY,MAAM,SAAS,MAAM,UAAU,CAAC,MAAM,WAAW,eAAe;AAClF,aAAO,EAAE,CAAC,QAAQ,GAAG,aAAa,MAAM;AAAA,IAAA,CACzC;AAEK,UAAA,sBAAsB,SAAS,MAAM;AACzC,YAAM,eAAe,CAAC,MAAM,QAAQ,WAAW,MAAM;AACrD,YAAM,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,QAAe;AAAA,QACf;AAAA,QAAgB;AAAA,QAAiB;AAAA,QACjC;AAAA,QAAkB;AAAA,QAAmB;AAAA,MAAA;AAGvC,UAAI,MAAM,QAAQ;AACT,eAAA,OAAO,KAAK,KAAK,eAAe,CAAC,GAAG,cAAc,GAAG,WAAW,CAAC,CAAC;AAAA,MAC3E;AAEA,aAAO,OAAO,KAAK,KAAK,eAAe,YAAY,CAAC;AAAA,IAAA,CACrD;AACD,UAAM,sBAAsB;AAAA,MAC1B,MAAM,OAAO,QAAQ,KAAK,EACvB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,oBAAoB,MAAM,SAAS,GAAG,CAAC,EAC5D,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM;AAC7B,eAAO,OAAO,KAAK,EAAE,CAAC,GAAG,GAAG,OAAO;AAC5B,eAAA;AAAA,MACT,GAAG,EAAE;AAAA,IAAA;AAGH,UAAA,0BAA0B,SAAS,OAAO;AAAA,MAC9C,IAAI,MAAM;AAAA,MACV,MAAM,MAAM;AAAA,MACZ,SAAS,MAAM;AAAA,IACf,EAAA;AAEF,UAAM,eAAe,MAAM;AAAE,oBAAc,QAAQ;AAAA,IAAA;AAE7C,UAAA,kBAAkB,qBAAqB,eAAe;AACtD,UAAA,YAAY,gBAAgB,IAAI;AAChC,UAAA,sBAAsB,0BAA0B,IAAI;AAE1D,UAAM,EAAE,GAAG,GAAG,IAAI,eAAe;AAEpB,aAAA;AAAA,MACX;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}