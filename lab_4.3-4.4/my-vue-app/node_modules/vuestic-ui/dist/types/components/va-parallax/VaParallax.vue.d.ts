import { PropType } from 'vue';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    target: {
        type: PropType<string | HTMLElement | undefined>;
    };
    src: {
        type: StringConstructor;
        default: string;
        required: true;
    };
    alt: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    reversed: {
        type: BooleanConstructor;
        default: boolean;
    };
    speed: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
        validator: (value: string | number) => boolean;
    };
    preset: {
        type: PropType<import("../../composables").PresetPropValue>;
        default: undefined;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    target: {
        type: PropType<string | HTMLElement | undefined>;
    };
    src: {
        type: StringConstructor;
        default: string;
        required: true;
    };
    alt: {
        type: StringConstructor;
        default: string;
    };
    height: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    reversed: {
        type: BooleanConstructor;
        default: boolean;
    };
    speed: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
        validator: (value: string | number) => boolean;
    };
    preset: {
        type: PropType<import("../../composables").PresetPropValue>;
        default: undefined;
    };
}>>, {
    preset: import("../../composables").PresetPropValue;
    src: string;
    alt: string;
    speed: string | number;
    height: string | number;
    reversed: boolean;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
