import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: StringConstructor;
        default: null;
    };
    palette: {
        type: PropType<string[]>;
        default: () => never[];
    };
    indicator: {
        type: PropType<"square" | "dot">;
        default: string;
        validator: (value: string) => boolean;
    };
    ariaLabel: {
        type: PropType<import("../../composables").TranslationProp>;
        default: import("../../composables").TranslationProp;
    };
    ariaIndicatorLabel: {
        type: PropType<import("../../composables").TranslationProp>;
        default: import("../../composables").TranslationProp;
    };
    preset: {
        type: PropType<import("../../composables").PresetPropValue>;
        default: undefined;
    };
    stateful: {
        type: PropType<boolean>;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (...args: any[]) => void;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: StringConstructor;
        default: null;
    };
    palette: {
        type: PropType<string[]>;
        default: () => never[];
    };
    indicator: {
        type: PropType<"square" | "dot">;
        default: string;
        validator: (value: string) => boolean;
    };
    ariaLabel: {
        type: PropType<import("../../composables").TranslationProp>;
        default: import("../../composables").TranslationProp;
    };
    ariaIndicatorLabel: {
        type: PropType<import("../../composables").TranslationProp>;
        default: import("../../composables").TranslationProp;
    };
    preset: {
        type: PropType<import("../../composables").PresetPropValue>;
        default: undefined;
    };
    stateful: {
        type: PropType<boolean>;
        default: boolean;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    modelValue: string;
    stateful: boolean;
    preset: import("../../composables").PresetPropValue;
    ariaLabel: import("../../composables").TranslationProp;
    indicator: "square" | "dot";
    palette: string[];
    ariaIndicatorLabel: import("../../composables").TranslationProp;
}, {}>;
export default _default;
