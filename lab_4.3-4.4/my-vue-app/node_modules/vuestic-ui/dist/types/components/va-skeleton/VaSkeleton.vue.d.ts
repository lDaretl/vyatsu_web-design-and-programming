import { PropType } from 'vue';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    color: {
        type: StringConstructor;
        default: string;
    };
    delay: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
    animation: {
        type: PropType<"none" | "pulse" | "wave">;
        default: string;
    };
    lines: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    height: {
        type: StringConstructor[];
        default: string;
    };
    width: {
        type: StringConstructor[];
        default: string;
    };
    lineGap: {
        type: StringConstructor;
        default: string;
    };
    lastLineWidth: {
        type: StringConstructor[];
        default: string;
    };
    variant: {
        type: PropType<"text" | "circle" | "rounded" | "squared">;
        default: string;
    };
    ariaLabel: {
        type: PropType<import("../../composables").TranslationProp>;
        default: import("../../composables").TranslationProp;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    color: {
        type: StringConstructor;
        default: string;
    };
    delay: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
    animation: {
        type: PropType<"none" | "pulse" | "wave">;
        default: string;
    };
    lines: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    height: {
        type: StringConstructor[];
        default: string;
    };
    width: {
        type: StringConstructor[];
        default: string;
    };
    lineGap: {
        type: StringConstructor;
        default: string;
    };
    lastLineWidth: {
        type: StringConstructor[];
        default: string;
    };
    variant: {
        type: PropType<"text" | "circle" | "rounded" | "squared">;
        default: string;
    };
    ariaLabel: {
        type: PropType<import("../../composables").TranslationProp>;
        default: import("../../composables").TranslationProp;
    };
}>>, {
    color: string;
    tag: string;
    ariaLabel: import("../../composables").TranslationProp;
    width: string;
    height: string;
    delay: string | number;
    lines: string | number;
    animation: "none" | "pulse" | "wave";
    lineGap: string;
    lastLineWidth: string;
    variant: "text" | "circle" | "rounded" | "squared";
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
