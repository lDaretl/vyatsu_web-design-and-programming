import { PropType } from 'vue';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    target: {
        type: PropType<string | HTMLElement>;
        default: string;
    };
    shadowOnScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    shadowColor: {
        type: StringConstructor;
        default: string;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    preset: {
        type: PropType<import("../../composables").PresetPropValue>;
        default: undefined;
    };
    hideOnScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    bottom: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    target: {
        type: PropType<string | HTMLElement>;
        default: string;
    };
    shadowOnScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    shadowColor: {
        type: StringConstructor;
        default: string;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    preset: {
        type: PropType<import("../../composables").PresetPropValue>;
        default: undefined;
    };
    hideOnScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    bottom: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    fixed: boolean;
    preset: import("../../composables").PresetPropValue;
    target: string | HTMLElement;
    bottom: boolean;
    color: string;
    gradient: boolean;
    shadowOnScroll: boolean;
    shadowColor: string;
    hideOnScroll: boolean;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
