import { PropType } from 'vue';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    components: {
        type: PropType<Partial<import("../../services/component-config").VuesticComponentPropsMap & {
            all: import("../../services/component-config").Props;
            presets: import("../../services/component-config").Presets;
        }>>;
        default: () => {};
    };
    colors: {
        type: PropType<({
            variables?: {
                [x: string & Record<never, never>]: string | undefined;
                primary?: string | undefined;
                secondary?: string | undefined;
                success?: string | undefined;
                info?: string | undefined;
                danger?: string | undefined;
                warning?: string | undefined;
                backgroundPrimary?: string | undefined;
                backgroundSecondary?: string | undefined;
                backgroundElement?: string | undefined;
                backgroundBorder?: string | undefined;
                textPrimary?: string | undefined;
                textInverted?: string | undefined;
                shadow?: string | undefined;
                focus?: string | undefined;
                transparent?: string | undefined;
                onFocus?: string | undefined;
                onPrimary?: string | undefined;
                onSecondary?: string | undefined;
                onSuccess?: string | undefined;
                onInfo?: string | undefined;
                onDanger?: string | undefined;
                onWarning?: string | undefined;
                onBackgroundPrimary?: string | undefined;
                onBackgroundSecondary?: string | undefined;
                onBackgroundElement?: string | undefined;
                onBackgroundBorder?: string | undefined;
                onTextPrimary?: string | undefined;
                onTextInverted?: string | undefined;
                onShadow?: string | undefined;
                onTransparent?: string | undefined;
            } | undefined;
            threshold?: number | undefined;
            presets?: {
                [x: string]: {
                    [x: string & Record<never, never>]: string | undefined;
                    primary?: string | undefined;
                    secondary?: string | undefined;
                    success?: string | undefined;
                    info?: string | undefined;
                    danger?: string | undefined;
                    warning?: string | undefined;
                    backgroundPrimary?: string | undefined;
                    backgroundSecondary?: string | undefined;
                    backgroundElement?: string | undefined;
                    backgroundBorder?: string | undefined;
                    textPrimary?: string | undefined;
                    textInverted?: string | undefined;
                    shadow?: string | undefined;
                    focus?: string | undefined;
                    transparent?: string | undefined;
                    onFocus?: string | undefined;
                    onPrimary?: string | undefined;
                    onSecondary?: string | undefined;
                    onSuccess?: string | undefined;
                    onInfo?: string | undefined;
                    onDanger?: string | undefined;
                    onWarning?: string | undefined;
                    onBackgroundPrimary?: string | undefined;
                    onBackgroundSecondary?: string | undefined;
                    onBackgroundElement?: string | undefined;
                    onBackgroundBorder?: string | undefined;
                    onTextPrimary?: string | undefined;
                    onTextInverted?: string | undefined;
                    onShadow?: string | undefined;
                    onTransparent?: string | undefined;
                } | undefined;
                light?: {
                    [x: string & Record<never, never>]: string | undefined;
                    primary?: string | undefined;
                    secondary?: string | undefined;
                    success?: string | undefined;
                    info?: string | undefined;
                    danger?: string | undefined;
                    warning?: string | undefined;
                    backgroundPrimary?: string | undefined;
                    backgroundSecondary?: string | undefined;
                    backgroundElement?: string | undefined;
                    backgroundBorder?: string | undefined;
                    textPrimary?: string | undefined;
                    textInverted?: string | undefined;
                    shadow?: string | undefined;
                    focus?: string | undefined;
                    transparent?: string | undefined;
                    onFocus?: string | undefined;
                    onPrimary?: string | undefined;
                    onSecondary?: string | undefined;
                    onSuccess?: string | undefined;
                    onInfo?: string | undefined;
                    onDanger?: string | undefined;
                    onWarning?: string | undefined;
                    onBackgroundPrimary?: string | undefined;
                    onBackgroundSecondary?: string | undefined;
                    onBackgroundElement?: string | undefined;
                    onBackgroundBorder?: string | undefined;
                    onTextPrimary?: string | undefined;
                    onTextInverted?: string | undefined;
                    onShadow?: string | undefined;
                    onTransparent?: string | undefined;
                } | undefined;
                dark?: {
                    [x: string & Record<never, never>]: string | undefined;
                    primary?: string | undefined;
                    secondary?: string | undefined;
                    success?: string | undefined;
                    info?: string | undefined;
                    danger?: string | undefined;
                    warning?: string | undefined;
                    backgroundPrimary?: string | undefined;
                    backgroundSecondary?: string | undefined;
                    backgroundElement?: string | undefined;
                    backgroundBorder?: string | undefined;
                    textPrimary?: string | undefined;
                    textInverted?: string | undefined;
                    shadow?: string | undefined;
                    focus?: string | undefined;
                    transparent?: string | undefined;
                    onFocus?: string | undefined;
                    onPrimary?: string | undefined;
                    onSecondary?: string | undefined;
                    onSuccess?: string | undefined;
                    onInfo?: string | undefined;
                    onDanger?: string | undefined;
                    onWarning?: string | undefined;
                    onBackgroundPrimary?: string | undefined;
                    onBackgroundSecondary?: string | undefined;
                    onBackgroundElement?: string | undefined;
                    onBackgroundBorder?: string | undefined;
                    onTextPrimary?: string | undefined;
                    onTextInverted?: string | undefined;
                    onShadow?: string | undefined;
                    onTransparent?: string | undefined;
                } | undefined;
            } | undefined;
            currentPresetName?: string | undefined;
        } & {
            variables?: Partial<import("../../composables").CustomColorVariables> | undefined;
        }) | undefined>;
    };
    i18n: {
        type: PropType<({
            [x: string]: string | undefined;
            progress?: string | undefined;
            search?: string | undefined;
            select?: string | undefined;
            cancel?: string | undefined;
            close?: string | undefined;
            reset?: string | undefined;
            color?: string | undefined;
            carousel?: string | undefined;
            pagination?: string | undefined;
            breadcrumbs?: string | undefined;
            step?: string | undefined;
            noOptions?: string | undefined;
            ok?: string | undefined;
            uploadFile?: string | undefined;
            undo?: string | undefined;
            dropzone?: string | undefined;
            fileDeleted?: string | undefined;
            closeAlert?: string | undefined;
            backToTop?: string | undefined;
            toggleDropdown?: string | undefined;
            goPreviousSlide?: string | undefined;
            goNextSlide?: string | undefined;
            goSlide?: string | undefined;
            slideOf?: string | undefined;
            openColorPicker?: string | undefined;
            colorSelection?: string | undefined;
            colorName?: string | undefined;
            decreaseCounter?: string | undefined;
            increaseCounter?: string | undefined;
            selectAllRows?: string | undefined;
            sortColumnBy?: string | undefined;
            selectRowByIndex?: string | undefined;
            resetDate?: string | undefined;
            nextPeriod?: string | undefined;
            switchView?: string | undefined;
            previousPeriod?: string | undefined;
            removeFile?: string | undefined;
            goToTheFirstPage?: string | undefined;
            goToPreviousPage?: string | undefined;
            goToSpecificPage?: string | undefined;
            goToSpecificPageInput?: string | undefined;
            goNextPage?: string | undefined;
            goLastPage?: string | undefined;
            currentRating?: string | undefined;
            voteRating?: string | undefined;
            optionsFilter?: string | undefined;
            splitPanels?: string | undefined;
            movePaginationLeft?: string | undefined;
            movePaginationRight?: string | undefined;
            resetTime?: string | undefined;
            closeToast?: string | undefined;
            selectedOption?: string | undefined;
            noSelectedOption?: string | undefined;
            counterValue?: string | undefined;
            selectedDate?: string | undefined;
            selectedTime?: string | undefined;
            progressState?: string | undefined;
            next?: string | undefined;
            back?: string | undefined;
            finish?: string | undefined;
            loading?: string | undefined;
            sliderValue?: string | undefined;
            switch?: string | undefined;
            inputField?: string | undefined;
            fileTypeIncorrect?: string | undefined;
        } & Partial<import("../../main").CustomI18NKeys>) | undefined>;
    };
    preset: {
        type: PropType<import("../../composables").PresetPropValue>;
        default: undefined;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    components: {
        type: PropType<Partial<import("../../services/component-config").VuesticComponentPropsMap & {
            all: import("../../services/component-config").Props;
            presets: import("../../services/component-config").Presets;
        }>>;
        default: () => {};
    };
    colors: {
        type: PropType<({
            variables?: {
                [x: string & Record<never, never>]: string | undefined;
                primary?: string | undefined;
                secondary?: string | undefined;
                success?: string | undefined;
                info?: string | undefined;
                danger?: string | undefined;
                warning?: string | undefined;
                backgroundPrimary?: string | undefined;
                backgroundSecondary?: string | undefined;
                backgroundElement?: string | undefined;
                backgroundBorder?: string | undefined;
                textPrimary?: string | undefined;
                textInverted?: string | undefined;
                shadow?: string | undefined;
                focus?: string | undefined;
                transparent?: string | undefined;
                onFocus?: string | undefined;
                onPrimary?: string | undefined;
                onSecondary?: string | undefined;
                onSuccess?: string | undefined;
                onInfo?: string | undefined;
                onDanger?: string | undefined;
                onWarning?: string | undefined;
                onBackgroundPrimary?: string | undefined;
                onBackgroundSecondary?: string | undefined;
                onBackgroundElement?: string | undefined;
                onBackgroundBorder?: string | undefined;
                onTextPrimary?: string | undefined;
                onTextInverted?: string | undefined;
                onShadow?: string | undefined;
                onTransparent?: string | undefined;
            } | undefined;
            threshold?: number | undefined;
            presets?: {
                [x: string]: {
                    [x: string & Record<never, never>]: string | undefined;
                    primary?: string | undefined;
                    secondary?: string | undefined;
                    success?: string | undefined;
                    info?: string | undefined;
                    danger?: string | undefined;
                    warning?: string | undefined;
                    backgroundPrimary?: string | undefined;
                    backgroundSecondary?: string | undefined;
                    backgroundElement?: string | undefined;
                    backgroundBorder?: string | undefined;
                    textPrimary?: string | undefined;
                    textInverted?: string | undefined;
                    shadow?: string | undefined;
                    focus?: string | undefined;
                    transparent?: string | undefined;
                    onFocus?: string | undefined;
                    onPrimary?: string | undefined;
                    onSecondary?: string | undefined;
                    onSuccess?: string | undefined;
                    onInfo?: string | undefined;
                    onDanger?: string | undefined;
                    onWarning?: string | undefined;
                    onBackgroundPrimary?: string | undefined;
                    onBackgroundSecondary?: string | undefined;
                    onBackgroundElement?: string | undefined;
                    onBackgroundBorder?: string | undefined;
                    onTextPrimary?: string | undefined;
                    onTextInverted?: string | undefined;
                    onShadow?: string | undefined;
                    onTransparent?: string | undefined;
                } | undefined;
                light?: {
                    [x: string & Record<never, never>]: string | undefined;
                    primary?: string | undefined;
                    secondary?: string | undefined;
                    success?: string | undefined;
                    info?: string | undefined;
                    danger?: string | undefined;
                    warning?: string | undefined;
                    backgroundPrimary?: string | undefined;
                    backgroundSecondary?: string | undefined;
                    backgroundElement?: string | undefined;
                    backgroundBorder?: string | undefined;
                    textPrimary?: string | undefined;
                    textInverted?: string | undefined;
                    shadow?: string | undefined;
                    focus?: string | undefined;
                    transparent?: string | undefined;
                    onFocus?: string | undefined;
                    onPrimary?: string | undefined;
                    onSecondary?: string | undefined;
                    onSuccess?: string | undefined;
                    onInfo?: string | undefined;
                    onDanger?: string | undefined;
                    onWarning?: string | undefined;
                    onBackgroundPrimary?: string | undefined;
                    onBackgroundSecondary?: string | undefined;
                    onBackgroundElement?: string | undefined;
                    onBackgroundBorder?: string | undefined;
                    onTextPrimary?: string | undefined;
                    onTextInverted?: string | undefined;
                    onShadow?: string | undefined;
                    onTransparent?: string | undefined;
                } | undefined;
                dark?: {
                    [x: string & Record<never, never>]: string | undefined;
                    primary?: string | undefined;
                    secondary?: string | undefined;
                    success?: string | undefined;
                    info?: string | undefined;
                    danger?: string | undefined;
                    warning?: string | undefined;
                    backgroundPrimary?: string | undefined;
                    backgroundSecondary?: string | undefined;
                    backgroundElement?: string | undefined;
                    backgroundBorder?: string | undefined;
                    textPrimary?: string | undefined;
                    textInverted?: string | undefined;
                    shadow?: string | undefined;
                    focus?: string | undefined;
                    transparent?: string | undefined;
                    onFocus?: string | undefined;
                    onPrimary?: string | undefined;
                    onSecondary?: string | undefined;
                    onSuccess?: string | undefined;
                    onInfo?: string | undefined;
                    onDanger?: string | undefined;
                    onWarning?: string | undefined;
                    onBackgroundPrimary?: string | undefined;
                    onBackgroundSecondary?: string | undefined;
                    onBackgroundElement?: string | undefined;
                    onBackgroundBorder?: string | undefined;
                    onTextPrimary?: string | undefined;
                    onTextInverted?: string | undefined;
                    onShadow?: string | undefined;
                    onTransparent?: string | undefined;
                } | undefined;
            } | undefined;
            currentPresetName?: string | undefined;
        } & {
            variables?: Partial<import("../../composables").CustomColorVariables> | undefined;
        }) | undefined>;
    };
    i18n: {
        type: PropType<({
            [x: string]: string | undefined;
            progress?: string | undefined;
            search?: string | undefined;
            select?: string | undefined;
            cancel?: string | undefined;
            close?: string | undefined;
            reset?: string | undefined;
            color?: string | undefined;
            carousel?: string | undefined;
            pagination?: string | undefined;
            breadcrumbs?: string | undefined;
            step?: string | undefined;
            noOptions?: string | undefined;
            ok?: string | undefined;
            uploadFile?: string | undefined;
            undo?: string | undefined;
            dropzone?: string | undefined;
            fileDeleted?: string | undefined;
            closeAlert?: string | undefined;
            backToTop?: string | undefined;
            toggleDropdown?: string | undefined;
            goPreviousSlide?: string | undefined;
            goNextSlide?: string | undefined;
            goSlide?: string | undefined;
            slideOf?: string | undefined;
            openColorPicker?: string | undefined;
            colorSelection?: string | undefined;
            colorName?: string | undefined;
            decreaseCounter?: string | undefined;
            increaseCounter?: string | undefined;
            selectAllRows?: string | undefined;
            sortColumnBy?: string | undefined;
            selectRowByIndex?: string | undefined;
            resetDate?: string | undefined;
            nextPeriod?: string | undefined;
            switchView?: string | undefined;
            previousPeriod?: string | undefined;
            removeFile?: string | undefined;
            goToTheFirstPage?: string | undefined;
            goToPreviousPage?: string | undefined;
            goToSpecificPage?: string | undefined;
            goToSpecificPageInput?: string | undefined;
            goNextPage?: string | undefined;
            goLastPage?: string | undefined;
            currentRating?: string | undefined;
            voteRating?: string | undefined;
            optionsFilter?: string | undefined;
            splitPanels?: string | undefined;
            movePaginationLeft?: string | undefined;
            movePaginationRight?: string | undefined;
            resetTime?: string | undefined;
            closeToast?: string | undefined;
            selectedOption?: string | undefined;
            noSelectedOption?: string | undefined;
            counterValue?: string | undefined;
            selectedDate?: string | undefined;
            selectedTime?: string | undefined;
            progressState?: string | undefined;
            next?: string | undefined;
            back?: string | undefined;
            finish?: string | undefined;
            loading?: string | undefined;
            sliderValue?: string | undefined;
            switch?: string | undefined;
            inputField?: string | undefined;
            fileTypeIncorrect?: string | undefined;
        } & Partial<import("../../main").CustomI18NKeys>) | undefined>;
    };
    preset: {
        type: PropType<import("../../composables").PresetPropValue>;
        default: undefined;
    };
}>>, {
    preset: import("../../composables").PresetPropValue;
    components: Partial<import("../../services/component-config").VuesticComponentPropsMap & {
        all: import("../../services/component-config").Props;
        presets: import("../../services/component-config").Presets;
    }>;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
