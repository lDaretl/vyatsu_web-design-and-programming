declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    color: {
        type: StringConstructor;
        default: string;
    };
    textColor: {
        type: StringConstructor;
    };
    text: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    multiLine: {
        type: BooleanConstructor;
        default: boolean;
    };
    visibleEmpty: {
        type: BooleanConstructor;
        default: boolean;
    };
    dot: {
        type: BooleanConstructor;
        default: boolean;
    };
    transparent: {
        type: BooleanConstructor;
        default: boolean;
    };
    overlap: {
        type: BooleanConstructor;
        default: boolean;
    };
    placement: {
        type: import("vue").PropType<import("../../composables").PlacementWithAlias>;
        default: string;
        validator: (position: import("../../composables").PlacementWithAlias) => boolean;
    };
    offset: {
        type: import("vue").PropType<import("./types").BadgeOffsetProp>;
        default: number;
        validator: (value: "toString") => boolean;
    };
    preset: {
        type: import("vue").PropType<import("../../composables").PresetPropValue>;
        default: undefined;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    color: {
        type: StringConstructor;
        default: string;
    };
    textColor: {
        type: StringConstructor;
    };
    text: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    multiLine: {
        type: BooleanConstructor;
        default: boolean;
    };
    visibleEmpty: {
        type: BooleanConstructor;
        default: boolean;
    };
    dot: {
        type: BooleanConstructor;
        default: boolean;
    };
    transparent: {
        type: BooleanConstructor;
        default: boolean;
    };
    overlap: {
        type: BooleanConstructor;
        default: boolean;
    };
    placement: {
        type: import("vue").PropType<import("../../composables").PlacementWithAlias>;
        default: string;
        validator: (position: import("../../composables").PlacementWithAlias) => boolean;
    };
    offset: {
        type: import("vue").PropType<import("./types").BadgeOffsetProp>;
        default: number;
        validator: (value: "toString") => boolean;
    };
    preset: {
        type: import("vue").PropType<import("../../composables").PresetPropValue>;
        default: undefined;
    };
}>>, {
    preset: import("../../composables").PresetPropValue;
    color: string;
    transparent: boolean;
    text: string | number;
    multiLine: boolean;
    visibleEmpty: boolean;
    dot: boolean;
    overlap: boolean;
    placement: import("../../composables").PlacementWithAlias;
    offset: import("./types").BadgeOffsetProp;
}, {}>, {
    text?(_: {}): any;
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
